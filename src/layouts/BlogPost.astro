---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@components/FormattedDate.astro";
import Link from "@components/Link.astro";
import DefaultLayout from "./DefaultLayout.astro";
import ProjectHero from "@components/ProjectHero.astro";
import Author from "@components/Author.astro";

type Props = CollectionEntry<"blog">["data"] & {
  project?: string;
};

const { title, description, date, heroImage, project, author } = Astro.props;
const encodedTitle = encodeURIComponent(title);
const url = Astro.url.toString();
const encodedUrl = encodeURIComponent(url);
const text = `Check out the post ${title} by the Linwood project: ${url}`;
const encodedText = encodeURIComponent(text);
// We need x (formally known as Twitter), Mastodon, Reddit, Email, Telegram, WhatsApp
const platforms = [
  {
    name: "Telegram",
    icon: "telegram-logo",
    link: `https://t.me/share/url?url=${encodedUrl}&text=${encodedText}`,
  },
  {
    name: "Email",
    icon: "envelope",
    link: `mailto:?subject=${title}&body=${text}`,
  },
  {
    name: "Reddit",
    icon: "reddit-logo",
    link: `https://www.reddit.com/submit?url=${encodedUrl}&title=${encodedTitle}`,
  },
  {
    name: "WhatsApp",
    icon: "whatsapp-logo",
    link: `https://wa.me/?text=${encodedText}`,
  },
  {
    name: "X (Twitter)",
    icon: "x-logo",
    link: `https://twitter.com/intent/tweet?text=${encodedText}&url=${encodedUrl}&via=LinwoodDev`,
  },
];
---

<DefaultLayout title={title} description={description ?? ""}>
  <dialog class="dialog" id="mastodon-dialog">
    <h1 class="dialog-title">Share to mastodon</h1>
    <div class="dialog-content col gap-sm">
      <input
        id="mastodon-input"
        placeholder="mastodon.social"
        type="text"
        value={url}
        data-encoded-text={encodedText}
        data-encoded-url={encodedUrl}
      />
      <button id="mastodon-submit" class="primary">Submit</button>
    </div>
  </dialog>
  <article class="col">
    {heroImage && <img width={720} height={360} src={heroImage} alt="" />}
    <h1>{title}</h1>
    <FormattedDate date={date} />
    <ProjectHero project={project} />
    <Author author={author.id} />
    <div class="row wrap gap-xs mv-xs">
      <button class="btn secondary icon-btn p-xs" id="mastodon-btn">
        <span
          class="ph-bold ph-mastodon-logo"
          style={{ fontSize: "1.5rem" }}
          aria-label="mastodon-logo"></span>
      </button>
      {
        platforms.map((e) => (
          <Link
            href={e.link}
            look="btn"
            variant="secondary"
            name={e.name}
            target="_blank"
            class="p-xs icon-btn"
          >
            <span
              class={`ph-bold ph-${e.icon}`}
              style={{ fontSize: "1.5rem" }}
              aria-label={`${e.name}-logo`}
            />
          </Link>
        ))
      }
      <button class="btn secondary icon-btn p-xs" id="link-btn">
        <span
          class="ph-bold ph-link"
          style={{ fontSize: "1.5rem" }}
          aria-label="link-logo"></span>
      </button>
    </div>
    <hr class="v-divider" />
    <slot />
  </article>
  <script
    is:inline
    src="https://giscus.app/client.js"
    data-repo="LinwoodDev/website"
    data-repo-id="MDEwOlJlcG9zaXRvcnkyODU3NjEwMzg="
    data-category="General"
    data-category-id="DIC_kwDOEQheDs4CVKEK"
    data-mapping="pathname"
    data-strict="1"
    data-reactions-enabled="1"
    data-emit-metadata="0"
    data-input-position="top"
    data-theme="transparent_dark"
    data-lang="en"
    data-loading="lazy"
    crossorigin="anonymous"
    async></script>
</DefaultLayout>
<script>
  const element = document.getElementById("link-btn");
  const mastodonInput = document.getElementById(
    "mastodon-input"
  ) as HTMLInputElement;
  const mastodonDialog = document.getElementById(
    "mastodon-dialog"
  ) as HTMLDialogElement;
  element?.addEventListener("click", () => {
    navigator.clipboard.writeText(element.dataset.url ?? window.location.href);
  });
  document.getElementById("mastodon-btn")?.addEventListener("click", () => {
    mastodonDialog.showModal();
    mastodonInput.value = "";
  });

  function submitMastodon() {
    const input = mastodonInput.value;
    const { encodedText, encodedUrl } = mastodonInput.dataset;
    const link = `https://${input}/share?text=${encodedText}&url=${encodedUrl}`;
    window.open(link, "_blank");
  }
  mastodonInput.addEventListener("keydown", (e) => {
    if (e.key === "Enter") {
      submitMastodon();
    } else if (e.key === "Escape") {
      mastodonDialog.close();
    }
  });
  mastodonDialog.addEventListener("close", () => {
    mastodonInput.value = "";
  });
  mastodonDialog.addEventListener("click", (e) => {
    const rect = (e.target as HTMLElement).getBoundingClientRect();
    if (
      (e.target === mastodonDialog && e.clientX < rect.left) ||
      e.clientX > rect.right ||
      e.clientY < rect.top ||
      e.clientY > rect.bottom
    ) {
      mastodonDialog.close();
    }
  });
  document
    .getElementById("mastodon-submit")
    ?.addEventListener("click", submitMastodon);
</script>
<style lang="scss">
  @use "@linwooddev/style/scss/main";
  .icon-btn {
    width: 2.5rem;
    height: 2.5rem;
  }
  .dialog {
    background-color: main.$color-background;
    color: main.$color-background-text;
    &::backdrop {
      background: rgba(0, 0, 0, 0.5);
      backdrop-filter: main.$elevation-filter;
    }
  }
</style>
