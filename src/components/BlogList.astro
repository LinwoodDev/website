---
import type { CollectionEntry } from "astro:content";
import { getEntryUrl } from "../blog";
import BaseHead from "./BaseHead.astro";
import FormattedDate from "./FormattedDate.astro";
import Link from "./Link.astro";
import type { Page } from "astro";

export interface Props {
  isMain?: boolean;
  page: Page<CollectionEntry<"blog">>;
}

const { page, isMain } = Astro.props as Props;
const posts = page.data;
---

<section>
  {isMain && <div class="row justify-between align-center">
    <h1>Blog</h1>
    <a href="/rss.xml" class="btn">RSS</a>
  </div>}
  <ul class="col gap-md align-stretch pv-md ph-xs">
    {
      posts.map((post) => (
        <li>
          <Link variant="secondary" href={`/${getEntryUrl(post)}`} look="card" class="row align-center wrap w-full p-sm no-decoration">
            <div class="w-md h-full bold">
              <FormattedDate date={post.data.date} />
            </div>
            <p class="highlight">{post.data.title}</p>
          </Link>
        </li>
      ))
    }
  </ul>
  <div class="col align-center">
  <p class="text-center">
    Page {page.currentPage} of {page.lastPage} ({page.total} posts in total)
  </p>
  <div class="row wrap justify-center gap-xs">
    {page.url.prev && (
      <Link
        variant="secondary"
        href={page.url.prev}
        class="btn"
      >
        Previous
      </Link>
    )}
    {page.url.next && (
      <Link
        variant="secondary"
        href={page.url.next}
        class="btn"
      >
        Next
      </Link>
    )}
  </div>
</div>
</section>
